{"ast":null,"code":"var _jsxFileName = \"/Users/leyla/Desktop/imdat-frontend/src/Components/HelpPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport PostShow from \"./PostShow\";\nimport \"../styles/PostShow.css\";\nimport BagisButton from \"./BagisButton\";\nimport MenuAppBar from \"./MenuAppBar\";\nimport '../styles/HelpPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HelpPosts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [userDetails, setUserDetails] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Define the function outside useEffect using useCallback\n  const withdrawHelp = useCallback(async postId => {\n    const email = sessionStorage.getItem('userEmail');\n    postId = post.id;\n    if (!email) {\n      console.error('No email found in sessionStorage');\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:4444/api/posts/removeHelpToPost`, {\n        email: email,\n        postId: postId\n      });\n      console.log(\"Help withdrawn successfully\", response.data);\n      // Optionally update UI or state based on response\n      // Update the posts array to remove the withdrawn post\n      setPosts(currentPosts => currentPosts.filter(post => post.id !== postId));\n    } catch (error) {\n      console.error('Error withdrawing help:', error);\n    }\n  }, []); // if dependent on dynamic variables, include them in this dependency array\n\n  useEffect(() => {\n    const fetchPostById = async postId => {\n      try {\n        const response = await axios.get(`http://localhost:4444/api/posts/getPostById/${postId}`);\n        return response.data;\n      } catch (error) {\n        console.error('Failed to fetch post details:', error);\n        return undefined;\n      }\n    };\n    const fetchUserDetailsAndPosts = async () => {\n      try {\n        const email = sessionStorage.getItem('userEmail');\n        if (!email) {\n          throw new Error('No email found in sessionStorage');\n        }\n        const userResponse = await axios.get(`http://localhost:4444/api/v1/test/user/${email}`);\n        setUserDetails(userResponse.data);\n        if (!userResponse.data || !userResponse.data.helpToPostlist) {\n          throw new Error('Unexpected API response structure');\n        }\n        const postIds = userResponse.data.helpToPostlist;\n        if (postIds.length === 0) {\n          throw new Error('No posts or empty posts list.');\n        }\n        const fetchPosts = await Promise.all(postIds.map(fetchPostById));\n        setPosts(fetchPosts.filter(post => post !== undefined));\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserDetailsAndPosts();\n  }, [withdrawHelp]); // make sure to include withdrawHelp here if its logic depends on the fetched data\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"helpPostPageDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MenuAppBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postContainer\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(PostShow, {\n        post: post,\n        showEmergencyButton: !post.isEmergencyPost,\n        showDonationButton: false,\n        showWithdrawButton: post.isEmergencyPost,\n        onWithdraw: withdrawHelp\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(HelpPosts, \"2iXqku8wXA/sUY5JA7K8sH8aKEE=\");\n_c = HelpPosts;\nexport default HelpPosts;\nvar _c;\n$RefreshReg$(_c, \"HelpPosts\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","PostShow","BagisButton","MenuAppBar","jsxDEV","_jsxDEV","HelpPosts","_s","posts","setPosts","userDetails","setUserDetails","loading","setLoading","error","setError","withdrawHelp","postId","email","sessionStorage","getItem","post","id","console","response","put","log","data","currentPosts","filter","fetchPostById","get","undefined","fetchUserDetailsAndPosts","Error","userResponse","helpToPostlist","postIds","length","fetchPosts","Promise","all","map","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","showEmergencyButton","isEmergencyPost","showDonationButton","showWithdrawButton","onWithdraw","_c","$RefreshReg$"],"sources":["/Users/leyla/Desktop/imdat-frontend/src/Components/HelpPosts.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport PostShow from \"./PostShow\";\nimport \"../styles/PostShow.css\";\nimport BagisButton from \"./BagisButton\";\nimport MenuAppBar from \"./MenuAppBar\";\nimport '../styles/HelpPost.css'\n\nfunction HelpPosts() {\n    const [posts, setPosts] = useState([]);\n    const [userDetails, setUserDetails] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Define the function outside useEffect using useCallback\n    const withdrawHelp = useCallback(async (postId) => {\n        const email = sessionStorage.getItem('userEmail');\n        postId = post.id;\n        if (!email) {\n            console.error('No email found in sessionStorage');\n            return;\n        }\n\n        try {\n            const response = await axios.put(`http://localhost:4444/api/posts/removeHelpToPost`, {\n\n                email: email,\n                postId: postId\n            });\n\n            console.log(\"Help withdrawn successfully\", response.data);\n            // Optionally update UI or state based on response\n            // Update the posts array to remove the withdrawn post\n            setPosts(currentPosts => currentPosts.filter(post => post.id !== postId));\n        } catch (error) {\n            console.error('Error withdrawing help:', error);\n        }\n    }, []);  // if dependent on dynamic variables, include them in this dependency array\n\n    useEffect(() => {\n        const fetchPostById = async (postId) => {\n            try {\n                const response = await axios.get(`http://localhost:4444/api/posts/getPostById/${postId}`);\n                return response.data;\n            } catch (error) {\n                console.error('Failed to fetch post details:', error);\n                return undefined;\n            }\n        };\n\n        const fetchUserDetailsAndPosts = async () => {\n            try {\n                const email = sessionStorage.getItem('userEmail');\n                if (!email) {\n                    throw new Error('No email found in sessionStorage');\n                }\n\n                const userResponse = await axios.get(`http://localhost:4444/api/v1/test/user/${email}`);\n                setUserDetails(userResponse.data);\n\n                if (!userResponse.data || !userResponse.data.helpToPostlist) {\n                    throw new Error('Unexpected API response structure');\n                }\n\n                const postIds = userResponse.data.helpToPostlist;\n                if (postIds.length === 0) {\n                    throw new Error('No posts or empty posts list.');\n                }\n\n                const fetchPosts = await Promise.all(postIds.map(fetchPostById));\n                setPosts(fetchPosts.filter(post => post !== undefined));\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchUserDetailsAndPosts();\n    }, [withdrawHelp]); // make sure to include withdrawHelp here if its logic depends on the fetched data\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n        <div className='helpPostPageDiv'>\n            <div>\n                <MenuAppBar />\n            </div>\n            <div className='postContainer'>\n                {posts.map((post, index) => (\n                    <PostShow\n                        key={index}\n                        post={post}\n                        showEmergencyButton={!post.isEmergencyPost}\n                        showDonationButton={false}\n                        showWithdrawButton={post.isEmergencyPost}\n                        onWithdraw={withdrawHelp}\n\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default HelpPosts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}