{"ast":null,"code":"var _jsxFileName = \"/Users/leyla/Desktop/imdat-frontend/src/Components/HelpPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HelpPosts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n  useEffect(() => {\n    // Retrieve email from sessionStorage\n    const email = sessionStorage.getItem('userEmail');\n    if (email) {\n      setUserEmail(email);\n      fetchUserDetails(email);\n    } else {\n      console.error('No email found in sessionStorage');\n    }\n  }, []);\n  const fetchUserDetails = email => {\n    axios.get(`http://localhost:8082/api/v1/test/user/${email}`).then(response => {\n      const {\n        helpToPostList\n      } = response.data;\n      fetchPostsDetails(helpToPostList);\n    }).catch(error => console.error('Error fetching user details:', error));\n  };\n  const fetchPostsDetails = postIds => {\n    axios.post('http://localhost:8082/api/posts/getPostsByIds', {\n      ids: postIds\n    }).then(postsResponse => {\n      setPosts(postsResponse.data);\n    }).catch(error => console.error('Error fetching posts details:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Help With This\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(HelpPosts, \"T7FlY0YYztYDOloDjmK4mXevdoI=\");\n_c = HelpPosts;\nexport default HelpPosts;\nvar _c;\n$RefreshReg$(_c, \"HelpPosts\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HelpPosts","_s","posts","setPosts","userEmail","setUserEmail","email","sessionStorage","getItem","fetchUserDetails","console","error","get","then","response","helpToPostList","data","fetchPostsDetails","catch","postIds","post","ids","postsResponse","children","map","title","fileName","_jsxFileName","lineNumber","columnNumber","description","id","_c","$RefreshReg$"],"sources":["/Users/leyla/Desktop/imdat-frontend/src/Components/HelpPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction HelpPosts() {\n    const [posts, setPosts] = useState([]);\n    const [userEmail, setUserEmail] = useState('');\n\n    useEffect(() => {\n        // Retrieve email from sessionStorage\n        const email = sessionStorage.getItem('userEmail');\n        if (email) {\n            setUserEmail(email);\n            fetchUserDetails(email);\n        } else {\n            console.error('No email found in sessionStorage');\n        }\n    }, []);\n\n    const fetchUserDetails = (email) => {\n        axios.get(`http://localhost:8082/api/v1/test/user/${email}`)\n            .then(response => {\n                const { helpToPostList } = response.data;\n                fetchPostsDetails(helpToPostList);\n            })\n            .catch(error => console.error('Error fetching user details:', error));\n    };\n\n    const fetchPostsDetails = (postIds) => {\n        axios.post('http://localhost:8082/api/posts/getPostsByIds', { ids: postIds })\n            .then(postsResponse => {\n                setPosts(postsResponse.data);\n            })\n            .catch(error => console.error('Error fetching posts details:', error));\n    };\n\n    return (\n        <div>\n            {posts.map(post => (\n                <div key={post.id}>\n                    <h3>{post.title}</h3>\n                    <p>{post.description}</p>\n                    <button>Help With This</button>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default HelpPosts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IACjD,IAAIF,KAAK,EAAE;MACPD,YAAY,CAACC,KAAK,CAAC;MACnBG,gBAAgB,CAACH,KAAK,CAAC;IAC3B,CAAC,MAAM;MACHI,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;IACrD;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,gBAAgB,GAAIH,KAAK,IAAK;IAChCT,KAAK,CAACe,GAAG,CAAC,0CAA0CN,KAAK,EAAE,CAAC,CACvDO,IAAI,CAACC,QAAQ,IAAI;MACd,MAAM;QAAEC;MAAe,CAAC,GAAGD,QAAQ,CAACE,IAAI;MACxCC,iBAAiB,CAACF,cAAc,CAAC;IACrC,CAAC,CAAC,CACDG,KAAK,CAACP,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EAC7E,CAAC;EAED,MAAMM,iBAAiB,GAAIE,OAAO,IAAK;IACnCtB,KAAK,CAACuB,IAAI,CAAC,+CAA+C,EAAE;MAAEC,GAAG,EAAEF;IAAQ,CAAC,CAAC,CACxEN,IAAI,CAACS,aAAa,IAAI;MACnBnB,QAAQ,CAACmB,aAAa,CAACN,IAAI,CAAC;IAChC,CAAC,CAAC,CACDE,KAAK,CAACP,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAC9E,CAAC;EAED,oBACIZ,OAAA;IAAAwB,QAAA,EACKrB,KAAK,CAACsB,GAAG,CAACJ,IAAI,iBACXrB,OAAA;MAAAwB,QAAA,gBACIxB,OAAA;QAAAwB,QAAA,EAAKH,IAAI,CAACK;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrB9B,OAAA;QAAAwB,QAAA,EAAIH,IAAI,CAACU;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB9B,OAAA;QAAAwB,QAAA,EAAQ;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAHzBT,IAAI,CAACW,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC5B,EAAA,CA3CQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}