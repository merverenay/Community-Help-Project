{"ast":null,"code":"var _jsxFileName = \"/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"90vh\"\n  };\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n\n  // Fetch current location from sessionStorage\n  useEffect(() => {\n    const sessionLat = sessionStorage.getItem(\"userLatitude\");\n    const sessionLng = sessionStorage.getItem(\"userLongitude\");\n    if (sessionLat && sessionLng) {\n      setCurrentPosition({\n        lat: parseFloat(sessionLat),\n        lng: parseFloat(sessionLng)\n      });\n    }\n  }, []);\n\n  // Example list of locations (latitude and longitude)\n  useEffect(() => {\n    // Replace with your actual list fetching logic\n    const fetchedLocations = [{\n      lat: -34.397,\n      lng: 150.644\n    }, {\n      lat: -34.5,\n      lng: 150.8\n    }, {\n      lat: -34.3,\n      lng: 150.5\n    }];\n    setLocations(fetchedLocations);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: currentPosition || locations[0] || {\n        lat: 0,\n        lng: 0\n      },\n      zoom: 10,\n      children: [currentPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentPosition,\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: location,\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"2bfki3oVJnfWPI3deH5gkvj5ErE=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Map","_s","mapContainerStyle","width","height","currentPosition","setCurrentPosition","locations","setLocations","sessionLat","sessionStorage","getItem","sessionLng","lat","parseFloat","lng","fetchedLocations","googleMapsApiKey","children","center","zoom","position","icon","url","fileName","_jsxFileName","lineNumber","columnNumber","map","location","index","_c","$RefreshReg$"],"sources":["/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nfunction Map() {\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"90vh\",\n  };\n\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n\n  // Fetch current location from sessionStorage\n  useEffect(() => {\n    const sessionLat = sessionStorage.getItem(\"userLatitude\");\n    const sessionLng = sessionStorage.getItem(\"userLongitude\");\n    if (sessionLat && sessionLng) {\n      setCurrentPosition({\n        lat: parseFloat(sessionLat),\n        lng: parseFloat(sessionLng),\n      });\n    }\n  }, []);\n\n  // Example list of locations (latitude and longitude)\n  useEffect(() => {\n    // Replace with your actual list fetching logic\n    const fetchedLocations = [\n      { lat: -34.397, lng: 150.644 },\n      { lat: -34.5, lng: 150.8 },\n      { lat: -34.3, lng: 150.5 },\n    ];\n    setLocations(fetchedLocations);\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\">\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        center={currentPosition || locations[0] || { lat: 0, lng: 0 }}\n        zoom={10}\n      >\n        {/* Render markers */}\n        {currentPosition && (\n          <Marker\n            position={currentPosition}\n            icon={{\n              url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n            }}\n          />\n        )}\n\n        {locations.map((location, index) => (\n          <Marker\n            key={index}\n            position={location}\n            icon={{\n              url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n            }}\n          />\n        ))}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,iBAAiB,GAAG;IACxBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EAED,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,MAAMC,UAAU,GAAGF,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAIF,UAAU,IAAIG,UAAU,EAAE;MAC5BN,kBAAkB,CAAC;QACjBO,GAAG,EAAEC,UAAU,CAACL,UAAU,CAAC;QAC3BM,GAAG,EAAED,UAAU,CAACF,UAAU;MAC5B,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnB,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,gBAAgB,GAAG,CACvB;MAAEH,GAAG,EAAE,CAAC,MAAM;MAAEE,GAAG,EAAE;IAAQ,CAAC,EAC9B;MAAEF,GAAG,EAAE,CAAC,IAAI;MAAEE,GAAG,EAAE;IAAM,CAAC,EAC1B;MAAEF,GAAG,EAAE,CAAC,IAAI;MAAEE,GAAG,EAAE;IAAM,CAAC,CAC3B;IACDP,YAAY,CAACQ,gBAAgB,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA,CAACH,UAAU;IAACqB,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eACpEnB,OAAA,CAACJ,SAAS;MACRO,iBAAiB,EAAEA,iBAAkB;MACrCiB,MAAM,EAAEd,eAAe,IAAIE,SAAS,CAAC,CAAC,CAAC,IAAI;QAAEM,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAE;MAC9DK,IAAI,EAAE,EAAG;MAAAF,QAAA,GAGRb,eAAe,iBACdN,OAAA,CAACF,MAAM;QACLwB,QAAQ,EAAEhB,eAAgB;QAC1BiB,IAAI,EAAE;UACJC,GAAG,EAAE;QACP;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACF,EAEApB,SAAS,CAACqB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B/B,OAAA,CAACF,MAAM;QAELwB,QAAQ,EAAEQ,QAAS;QACnBP,IAAI,EAAE;UACJC,GAAG,EAAE;QACP;MAAE,GAJGO,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB;AAAC1B,EAAA,CA7DQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}