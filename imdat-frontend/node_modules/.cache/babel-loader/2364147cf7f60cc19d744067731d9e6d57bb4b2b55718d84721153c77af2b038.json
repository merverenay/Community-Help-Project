{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Onat\\\\Documents\\\\GitHub\\\\imdat-frontend\\\\src\\\\Components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"90vh\"\n  };\n  const [posts, setPosts] = useState([]);\n  const createPost = (status, address, image) => {\n    const createdPost = [...posts, {\n      id: Math.round(Math.random() * 9999999),\n      status,\n      address,\n      image\n    }];\n    setPosts(createdPost);\n  };\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const sessionLat = parseFloat(sessionStorage.getItem(\"userLatitude\"));\n    const sessionLng = parseFloat(sessionStorage.getItem(\"userLongitude\"));\n    console.log(sessionLat, sessionLng);\n    if (!isNaN(sessionLat) && !isNaN(sessionLng)) {\n      setCurrentPosition({\n        lat: sessionLat,\n        lng: sessionLng\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (location.state && location.state.locations) {\n      console.log(location.state.locations);\n      setLocations(location.state.locations);\n    }\n  }, [location]);\n  const handleMarkerClick = location => {\n    setSelectedMarker(location);\n  };\n  const handlePostClick = post => {\n    console.log(\"**** - handle post click\" + post.id);\n    const endpoint = `http://localhost:8081/api/posts/getPostById/${post.id}`;\n    axios.get(endpoint).then(response => {\n      const postData = response.data;\n      console.log(response);\n      navigate(`/post/${post.id}`, {\n        state: {\n          post: postData\n        }\n      });\n    }).catch(error => {\n      console.error('Error fetching post:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: currentPosition || (locations.length > 0 ? locations[0] : {\n        lat: 0,\n        lng: 0\n      }),\n      zoom: 10,\n      children: [currentPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentPosition,\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n        },\n        onClick: () => handleMarkerClick(currentPosition)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), locations === null || locations === void 0 ? void 0 : locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: location.latitude,\n          lng: location.longitude\n        },\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n        },\n        onClick: () => handleMarkerClick(location)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selectedMarker.latitude,\n          lng: selectedMarker.longitude\n        },\n        onCloseClick: () => setSelectedMarker(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Location Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedMarker.imageUrl // Assuming your location data includes an imageUrl field\n            ,\n            alt: \"location\",\n            style: {\n              width: \"100px\",\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMarker.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePostClick(selectedMarker),\n            children: \"View Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"ji2v3sKI+ubZoYMH4uRIG0YBQn8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","GoogleMap","LoadScript","Marker","InfoWindow","axios","jsxDEV","_jsxDEV","Map","_s","mapContainerStyle","width","height","posts","setPosts","createPost","status","address","image","createdPost","id","Math","round","random","currentPosition","setCurrentPosition","locations","setLocations","selectedMarker","setSelectedMarker","location","navigate","sessionLat","parseFloat","sessionStorage","getItem","sessionLng","console","log","isNaN","lat","lng","state","handleMarkerClick","handlePostClick","post","endpoint","get","then","response","postData","data","catch","error","googleMapsApiKey","children","center","length","zoom","position","icon","url","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","latitude","longitude","onCloseClick","src","imageUrl","alt","style","description","_c","$RefreshReg$"],"sources":["C:/Users/Onat/Documents/GitHub/imdat-frontend/src/Components/Map.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\r\nimport axios from \"axios\";\r\n\r\nfunction Map() {\r\n  const mapContainerStyle = {\r\n    width: \"100%\",\r\n    height: \"90vh\",\r\n  };\r\n  const [posts, setPosts] = useState([]);\r\n  const createPost = (status, address, image) => {\r\n    const createdPost = [\r\n      ...posts,\r\n      {\r\n        id: Math.round(Math.random() * 9999999),\r\n        status,\r\n        address,\r\n        image\r\n      }\r\n    ];\r\n    setPosts(createdPost);\r\n  };\r\n\r\n  const [currentPosition, setCurrentPosition] = useState(null);\r\n  const [locations, setLocations] = useState([]);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const sessionLat = parseFloat(sessionStorage.getItem(\"userLatitude\"));\r\n    const sessionLng = parseFloat(sessionStorage.getItem(\"userLongitude\"));\r\n    console.log(sessionLat, sessionLng);\r\n    if (!isNaN(sessionLat) && !isNaN(sessionLng)) {\r\n      setCurrentPosition({ lat: sessionLat, lng: sessionLng });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.locations) {\r\n      console.log(location.state.locations)\r\n      setLocations(location.state.locations);\r\n    }\r\n  }, [location]);\r\n\r\n  const handleMarkerClick = (location) => {\r\n    setSelectedMarker(location);\r\n  };\r\n\r\n\r\n  const handlePostClick = (post) => {\r\n    console.log(\"**** - handle post click\" + post.id)\r\n    const endpoint = `http://localhost:8081/api/posts/getPostById/${post.id}`;\r\n\r\n    axios.get(endpoint)\r\n      .then(response => {\r\n        const postData = response.data;\r\n        console.log(response)\r\n        navigate(`/post/${post.id}`, { state: { post: postData } });\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching post:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\">\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={currentPosition || (locations.length > 0 ? locations[0] : { lat: 0, lng: 0 })}\r\n        zoom={10}\r\n      >\r\n        {/* Render markers */}\r\n        {currentPosition && (\r\n          <Marker\r\n            position={currentPosition}\r\n            icon={{\r\n              url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\r\n            }}\r\n            onClick={() => handleMarkerClick(currentPosition)}\r\n          />\r\n        )}\r\n\r\n\r\n        {locations?.map((location, index) => (\r\n          <Marker\r\n            key={index}\r\n            position={{ lat: location.latitude, lng: location.longitude }}\r\n            icon={{\r\n              url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\r\n            }}\r\n            onClick={() => handleMarkerClick(location)}\r\n          />\r\n        ))}\r\n\r\n        {selectedMarker && (\r\n          <InfoWindow\r\n            position={{ lat: selectedMarker.latitude, lng: selectedMarker.longitude }}\r\n            onCloseClick={() => setSelectedMarker(null)}\r\n          >\r\n            <div>\r\n              <h4>Location Info</h4>\r\n              <img\r\n                src={selectedMarker.imageUrl} // Assuming your location data includes an imageUrl field\r\n                alt=\"location\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n              />\r\n              <p>{selectedMarker.description}</p> {/* Assuming your location data includes a description field */}\r\n              <button onClick={() => handlePostClick(selectedMarker)}>View Post</button>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}