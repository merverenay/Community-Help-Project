{"ast":null,"code":"var _jsxFileName = \"/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"90vh\"\n  };\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const location = useLocation();\n  const history = useHistory();\n  useEffect(() => {\n    const sessionLat = parseFloat(sessionStorage.getItem(\"userLatitude\"));\n    const sessionLng = parseFloat(sessionStorage.getItem(\"userLongitude\"));\n    console.log(sessionLat, sessionLng);\n    if (!isNaN(sessionLat) && !isNaN(sessionLng)) {\n      setCurrentPosition({\n        lat: sessionLat,\n        lng: sessionLng\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (location.state && location.state.locations) {\n      setLocations(location.state.locations);\n    }\n  }, [location]);\n  const handleMarkerClick = location => {\n    setSelectedMarker(location);\n  };\n  const handlePostClick = post => {\n    history.push({\n      pathname: `/post/${post.id}`,\n      state: {\n        post\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: currentPosition || (locations.length > 0 ? locations[0] : {\n        lat: 0,\n        lng: 0\n      }),\n      zoom: 10,\n      children: [currentPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentPosition,\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n        },\n        onClick: () => handleMarkerClick(currentPosition)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: location.latitude,\n          lng: location.longitude\n        },\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n        },\n        onClick: () => handleMarkerClick(location)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: selectedMarker.latitude,\n          lng: selectedMarker.longitude\n        },\n        onCloseClick: () => setSelectedMarker(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Location Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedMarker.imageUrl // Assuming your location data includes an imageUrl field\n            ,\n            alt: \"location\",\n            style: {\n              width: \"100px\",\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedMarker.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePostClick(selectedMarker),\n            children: \"View Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"gczia4IUOrMEqoKKVejyJUXc3sA=\", false, function () {\n  return [useLocation, useHistory];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useHistory","GoogleMap","LoadScript","Marker","InfoWindow","jsxDEV","_jsxDEV","Map","_s","mapContainerStyle","width","height","currentPosition","setCurrentPosition","locations","setLocations","selectedMarker","setSelectedMarker","location","history","sessionLat","parseFloat","sessionStorage","getItem","sessionLng","console","log","isNaN","lat","lng","state","handleMarkerClick","handlePostClick","post","push","pathname","id","googleMapsApiKey","children","center","length","zoom","position","icon","url","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","latitude","longitude","onCloseClick","src","imageUrl","alt","style","description","_c","$RefreshReg$"],"sources":["/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\n\nfunction Map() {\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"90vh\",\n  };\n\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    const sessionLat = parseFloat(sessionStorage.getItem(\"userLatitude\"));\n    const sessionLng = parseFloat(sessionStorage.getItem(\"userLongitude\"));  \n    console.log(sessionLat, sessionLng);  \n    if (!isNaN(sessionLat) && !isNaN(sessionLng)) {\n      setCurrentPosition({ lat: sessionLat, lng: sessionLng });\n    }\n  }, []);\n  \n  useEffect(() => {\n    if (location.state && location.state.locations) {\n      setLocations(location.state.locations);\n    }\n  }, [location]);\n\n  const handleMarkerClick = (location) => {\n    setSelectedMarker(location);\n  };\n\n  const handlePostClick = (post) => {\n    history.push({\n      pathname: `/post/${post.id}`,\n      state: { post },\n    });\n  };\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\">\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        center={currentPosition || (locations.length > 0 ? locations[0] : { lat: 0, lng: 0 })}\n        zoom={10}\n      >\n        {/* Render markers */}\n        {currentPosition && (\n          <Marker\n            position={currentPosition}\n            icon={{\n              url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n            }}\n            onClick={() => handleMarkerClick(currentPosition)}\n          />\n        )}\n\n        {locations.map((location, index) => (\n          <Marker\n            key={index}\n            position={{ lat: location.latitude, lng: location.longitude }}\n            icon={{\n              url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n            }}\n            onClick={() => handleMarkerClick(location)}\n          />\n        ))}\n\n        {selectedMarker && (\n          <InfoWindow\n            position={{ lat: selectedMarker.latitude, lng: selectedMarker.longitude }}\n            onCloseClick={() => setSelectedMarker(null)}\n          >\n            <div>\n              <h4>Location Info</h4>\n              <img\n                src={selectedMarker.imageUrl} // Assuming your location data includes an imageUrl field\n                alt=\"location\"\n                style={{ width: \"100px\", height: \"100px\" }}\n              />\n              <p>{selectedMarker.description}</p> {/* Assuming your location data includes a description field */}\n              <button onClick={() => handlePostClick(selectedMarker)}>View Post</button>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,UAAU,QAAQ,kBAAkB;AAC1D,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,iBAAiB,GAAG;IACxBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EAED,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMoB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAMoB,OAAO,GAAGnB,UAAU,CAAC,CAAC;EAE5BH,SAAS,CAAC,MAAM;IACd,MAAMuB,UAAU,GAAGC,UAAU,CAACC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IACrE,MAAMC,UAAU,GAAGH,UAAU,CAACC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;IACtEE,OAAO,CAACC,GAAG,CAACN,UAAU,EAAEI,UAAU,CAAC;IACnC,IAAI,CAACG,KAAK,CAACP,UAAU,CAAC,IAAI,CAACO,KAAK,CAACH,UAAU,CAAC,EAAE;MAC5CX,kBAAkB,CAAC;QAAEe,GAAG,EAAER,UAAU;QAAES,GAAG,EAAEL;MAAW,CAAC,CAAC;IAC1D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IACd,IAAIqB,QAAQ,CAACY,KAAK,IAAIZ,QAAQ,CAACY,KAAK,CAAChB,SAAS,EAAE;MAC9CC,YAAY,CAACG,QAAQ,CAACY,KAAK,CAAChB,SAAS,CAAC;IACxC;EACF,CAAC,EAAE,CAACI,QAAQ,CAAC,CAAC;EAEd,MAAMa,iBAAiB,GAAIb,QAAQ,IAAK;IACtCD,iBAAiB,CAACC,QAAQ,CAAC;EAC7B,CAAC;EAED,MAAMc,eAAe,GAAIC,IAAI,IAAK;IAChCd,OAAO,CAACe,IAAI,CAAC;MACXC,QAAQ,EAAE,SAASF,IAAI,CAACG,EAAE,EAAE;MAC5BN,KAAK,EAAE;QAAEG;MAAK;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACE3B,OAAA,CAACJ,UAAU;IAACmC,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eACpEhC,OAAA,CAACL,SAAS;MACRQ,iBAAiB,EAAEA,iBAAkB;MACrC8B,MAAM,EAAE3B,eAAe,KAAKE,SAAS,CAAC0B,MAAM,GAAG,CAAC,GAAG1B,SAAS,CAAC,CAAC,CAAC,GAAG;QAAEc,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAE,CAAC,CAAE;MACtFY,IAAI,EAAE,EAAG;MAAAH,QAAA,GAGR1B,eAAe,iBACdN,OAAA,CAACH,MAAM;QACLuC,QAAQ,EAAE9B,eAAgB;QAC1B+B,IAAI,EAAE;UACJC,GAAG,EAAE;QACP,CAAE;QACFC,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACnB,eAAe;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACF,EAEAnC,SAAS,CAACoC,GAAG,CAAC,CAAChC,QAAQ,EAAEiC,KAAK,kBAC7B7C,OAAA,CAACH,MAAM;QAELuC,QAAQ,EAAE;UAAEd,GAAG,EAAEV,QAAQ,CAACkC,QAAQ;UAAEvB,GAAG,EAAEX,QAAQ,CAACmC;QAAU,CAAE;QAC9DV,IAAI,EAAE;UACJC,GAAG,EAAE;QACP,CAAE;QACFC,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACb,QAAQ;MAAE,GALtCiC,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACF,CAAC,EAEDjC,cAAc,iBACbV,OAAA,CAACF,UAAU;QACTsC,QAAQ,EAAE;UAAEd,GAAG,EAAEZ,cAAc,CAACoC,QAAQ;UAAEvB,GAAG,EAAEb,cAAc,CAACqC;QAAU,CAAE;QAC1EC,YAAY,EAAEA,CAAA,KAAMrC,iBAAiB,CAAC,IAAI,CAAE;QAAAqB,QAAA,eAE5ChC,OAAA;UAAAgC,QAAA,gBACEhC,OAAA;YAAAgC,QAAA,EAAI;UAAa;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtB3C,OAAA;YACEiD,GAAG,EAAEvC,cAAc,CAACwC,QAAS,CAAC;YAAA;YAC9BC,GAAG,EAAC,UAAU;YACdC,KAAK,EAAE;cAAEhD,KAAK,EAAE,OAAO;cAAEC,MAAM,EAAE;YAAQ;UAAE;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC,eACF3C,OAAA;YAAAgC,QAAA,EAAItB,cAAc,CAAC2C;UAAW;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,KAAC,eACpC3C,OAAA;YAAQuC,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAAChB,cAAc,CAAE;YAAAsB,QAAA,EAAC;UAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB;AAACzC,EAAA,CAxFQD,GAAG;EAAA,QAUOR,WAAW,EACZC,UAAU;AAAA;AAAA4D,EAAA,GAXnBrD,GAAG;AA0FZ,eAAeA,GAAG;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}