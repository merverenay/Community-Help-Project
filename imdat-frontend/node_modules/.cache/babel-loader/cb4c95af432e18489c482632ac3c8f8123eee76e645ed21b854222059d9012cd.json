{"ast":null,"code":"var _jsxFileName = \"/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/Main.css';\nimport PostList from './PostList';\nimport MenuAppBar from './MenuAppBar';\nimport MainCard from './MainCard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/getAllEmergencyPosts');\n        // Convert imageBinaryData to base64 for each post\n        const postsWithImages = response.data.map(post => ({\n          ...post,\n          imageDataUrl: `data:image/jpeg;base64,${arrayBufferToBase64(post.imageBinaryData)}`\n        }));\n        setPosts(postsWithImages);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const createPost = (status, address, image) => {\n    // Simulate creating a post and adding it to the list\n    const newPost = {\n      id: Math.round(Math.random() * 9999999),\n      status,\n      address,\n      image,\n      imageDataUrl: image ? URL.createObjectURL(image) : null // Create URL for image preview\n    };\n    setPosts([...posts, newPost]);\n  };\n\n  // Function to convert byte array to base64 string\n  const arrayBufferToBase64 = buffer => {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MenuAppBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MainCard, {\n        onCreate: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","PostList","MenuAppBar","MainCard","axios","jsxDEV","_jsxDEV","Main","_s","posts","setPosts","fetchPosts","response","get","postsWithImages","data","map","post","imageDataUrl","arrayBufferToBase64","imageBinaryData","error","console","createPost","status","address","image","newPost","id","Math","round","random","URL","createObjectURL","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","_c","$RefreshReg$"],"sources":["/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Main.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/Main.css';\nimport PostList from './PostList';\nimport MenuAppBar from './MenuAppBar';\nimport MainCard from './MainCard';\nimport axios from 'axios';\n\nfunction Main() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/getAllEmergencyPosts');\n        // Convert imageBinaryData to base64 for each post\n        const postsWithImages = response.data.map(post => ({\n          ...post,\n          imageDataUrl: `data:image/jpeg;base64,${arrayBufferToBase64(post.imageBinaryData)}`\n        }));\n        setPosts(postsWithImages);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const createPost = (status, address, image) => {\n    // Simulate creating a post and adding it to the list\n    const newPost = {\n      id: Math.round(Math.random() * 9999999),\n      status,\n      address,\n      image,\n      imageDataUrl: image ? URL.createObjectURL(image) : null // Create URL for image preview\n    };\n    setPosts([...posts, newPost]);\n  };\n\n  // Function to convert byte array to base64 string\n  const arrayBufferToBase64 = (buffer) => {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  };\n\n  return (\n    <div className='mainPage'>\n      <div>\n        <MenuAppBar />\n      </div>\n      <div>\n        <MainCard onCreate={createPost} />\n      </div>\n      <div>\n        <PostList posts={posts} />\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}