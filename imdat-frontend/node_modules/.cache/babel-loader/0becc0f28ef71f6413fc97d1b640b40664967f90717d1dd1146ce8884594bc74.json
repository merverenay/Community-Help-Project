{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mesut\\\\VS Code Projects\\\\imdat-frontend\\\\src\\\\Components\\\\BagisButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BagisButton = ({\n  post\n}) => {\n  _s();\n  const [donationAmount, setDonationAmount] = useState(\"\");\n  const [totalAmount, setTotalAmount] = useState(post.totalAmount, 0);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    console.log(\"BagisButton post:\", post); // Log the post to ensure it is received correctly\n    setTotalAmount(post.totalAmount, 0); // Initialize total amount from post prop\n  }, [post]);\n  const handleDonationChange = e => {\n    setDonationAmount(e.target.value);\n  };\n  const handleDonationClick = async () => {\n    const email = sessionStorage.getItem(\"userEmail\");\n    const postId = post.id;\n    const amount = parseFloat(donationAmount);\n    if (isNaN(amount) || amount <= 0) {\n      console.error(\"Invalid donation amount\");\n      return;\n    }\n\n    // Optimistically update the total amount\n    const optimisticTotal = totalAmount + amount;\n    setTotalAmount(optimisticTotal);\n    setDonationAmount(\"\"); // Clear the donation input field\n    setIsSubmitting(true);\n    try {\n      const response = await axios.post(\"http://localhost:8081/api/posts/donate\", {\n        email,\n        postId,\n        donateAmount: amount\n      });\n      console.log(\"Donation successful\", response.data);\n      // Ensure the total amount is updated correctly from the backend response\n      if (response.data.totalAmount !== undefined) {\n        setTotalAmount(response.data.totalAmount);\n      }\n    } catch (error) {\n      console.error(\"Error making donation:\", error);\n      // Revert to previous total amount if the request fails\n      setTotalAmount(prevTotal => prevTotal - amount);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"acildurum-button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: donationAmount,\n      onChange: handleDonationChange,\n      placeholder: \"Ba\\u011F\\u0131\\u015F Miktar\\u0131 (TL)\",\n      style: {\n        marginRight: \"10px\",\n        padding: \"10px\",\n        borderRadius: \"5px\",\n        border: \"1px solid gray\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDonationClick,\n      disabled: isSubmitting,\n      style: {\n        backgroundColor: \"green\",\n        color: \"white\",\n        padding: \"10px\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\"\n      },\n      children: \"Ba\\u011F\\u0131\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Amount: \", totalAmount, \" TL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(BagisButton, \"Fl0OnDSU8ayPcKC8zC+XllOVHB8=\");\n_c = BagisButton;\nexport default BagisButton;\nvar _c;\n$RefreshReg$(_c, \"BagisButton\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BagisButton","post","_s","donationAmount","setDonationAmount","totalAmount","setTotalAmount","isSubmitting","setIsSubmitting","console","log","handleDonationChange","e","target","value","handleDonationClick","email","sessionStorage","getItem","postId","id","amount","parseFloat","isNaN","error","optimisticTotal","response","donateAmount","data","undefined","prevTotal","className","children","type","onChange","placeholder","style","marginRight","padding","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/mesut/VS Code Projects/imdat-frontend/src/Components/BagisButton.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BagisButton = ({ post }) => {\r\n  const [donationAmount, setDonationAmount] = useState(\"\");\r\n  const [totalAmount, setTotalAmount] = useState(post.totalAmount, 0);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"BagisButton post:\", post); // Log the post to ensure it is received correctly\r\n    setTotalAmount(post.totalAmount, 0); // Initialize total amount from post prop\r\n  }, [post]);\r\n\r\n  const handleDonationChange = (e) => {\r\n    setDonationAmount(e.target.value);\r\n  };\r\n\r\n  const handleDonationClick = async () => {\r\n    const email = sessionStorage.getItem(\"userEmail\");\r\n    const postId = post.id;\r\n    const amount = parseFloat(donationAmount);\r\n\r\n    if (isNaN(amount) || amount <= 0) {\r\n      console.error(\"Invalid donation amount\");\r\n      return;\r\n    }\r\n\r\n    // Optimistically update the total amount\r\n    const optimisticTotal = totalAmount + amount;\r\n    setTotalAmount(optimisticTotal);\r\n    setDonationAmount(\"\"); // Clear the donation input field\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8081/api/posts/donate\",\r\n        {\r\n          email,\r\n          postId,\r\n          donateAmount: amount,\r\n        }\r\n      );\r\n      console.log(\"Donation successful\", response.data);\r\n      // Ensure the total amount is updated correctly from the backend response\r\n      if (response.data.totalAmount !== undefined) {\r\n        setTotalAmount(response.data.totalAmount);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error making donation:\", error);\r\n      // Revert to previous total amount if the request fails\r\n      setTotalAmount((prevTotal) => prevTotal - amount);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"acildurum-button-container\">\r\n      <input\r\n        type=\"text\"\r\n        value={donationAmount}\r\n        onChange={handleDonationChange}\r\n        placeholder=\"Bağış Miktarı (TL)\"\r\n        style={{\r\n          marginRight: \"10px\",\r\n          padding: \"10px\",\r\n          borderRadius: \"5px\",\r\n          border: \"1px solid gray\",\r\n        }}\r\n      />\r\n      <button\r\n        onClick={handleDonationClick}\r\n        disabled={isSubmitting}\r\n        style={{\r\n          backgroundColor: \"green\",\r\n          color: \"white\",\r\n          padding: \"10px\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Bağış Yap\r\n      </button>\r\n      <div>\r\n        <p>Total Amount: {totalAmount} TL</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BagisButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}