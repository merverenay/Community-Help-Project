{"ast":null,"code":"var _jsxFileName = \"/Users/leyla/Desktop/imdat-frontend/src/Components/BagisButton.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const BagisButton = ({ post }) => {\n//   const [donationAmount, setDonationAmount] = useState(\"\");\n//   const [totalAmount, setTotalAmount] = useState(post.totalAmount || 0);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n\n//   useEffect(() => {\n//     console.log(\"BagisButton post:\", post); // Log the post to ensure it is received correctly\n//     setTotalAmount(post.totalAmount || 0); // Initialize total amount from post prop\n//   }, [post]);\n\n//   const handleDonationChange = (e) => {\n//     setDonationAmount(e.target.value);\n//   };\n\n//   const handleDonationClick = async () => {\n//     const email = sessionStorage.getItem(\"userEmail\");\n//     const postId = post.id;\n//     const amount = parseFloat(donationAmount);\n\n//     if (isNaN(amount) || amount <= 0) {\n//       console.error(\"Invalid donation amount\");\n//       return;\n//     }\n\n//     // Optimistically update the total amount\n//     const optimisticTotal = totalAmount + amount;\n//     setTotalAmount(optimisticTotal);\n//     setDonationAmount(\"\"); // Clear the donation input field\n//     setIsSubmitting(true);\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8081/api/posts/donate\",\n//         {\n//           email,\n//           postId,\n//           donateAmount: amount,\n//         }\n//       );\n//       console.log(\"Donation successful\", response.data);\n//       // Ensure the total amount is updated correctly from the backend response\n//       if (response.data.totalAmount !== undefined) {\n//         setTotalAmount(response.data.totalAmount);\n//       }\n//     } catch (error) {\n//       console.error(\"Error making donation:\", error);\n//       // Revert to previous total amount if the request fails\n//       setTotalAmount((prevTotal) => prevTotal - amount);\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"acildurum-button-container\">\n//       <input\n//         type=\"text\"\n//         value={donationAmount}\n//         onChange={handleDonationChange}\n//         placeholder=\"Bağış Miktarı (TL)\"\n//         style={{\n//           marginRight: \"10px\",\n//           padding: \"10px\",\n//           borderRadius: \"5px\",\n//           border: \"1px solid gray\",\n//         }}\n//       />\n//       <button\n//         onClick={handleDonationClick}\n//         disabled={isSubmitting}\n//         style={{\n//           backgroundColor: \"green\",\n//           color: \"white\",\n//           padding: \"10px\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           cursor: \"pointer\",\n//         }}\n//       >\n//         Bağış Yap\n//       </button>\n//       <div>\n//         <p>Total Amount: {totalAmount} TL</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BagisButton;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BagisButton = ({\n  post\n}) => {\n  _s();\n  const [donationAmount, setDonationAmount] = useState('');\n  const [totalAmount, setTotalAmount] = useState(post.totalAmount || 0);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    console.log('BagisButton post:', post); // Log the post to ensure it is received correctly\n    setTotalAmount(post.totalAmount || 0); // Initialize total amount from post prop\n  }, [post]);\n  const handleDonationChange = e => {\n    setDonationAmount(e.target.value);\n  };\n  const handleDonationClick = async () => {\n    const email = sessionStorage.getItem('userEmail');\n    const postId = post.id;\n    const amount = parseFloat(donationAmount);\n    if (isNaN(amount) || amount <= 0) {\n      console.error('Invalid donation amount');\n      return;\n    }\n\n    // Optimistically update the total amount\n    const optimisticTotal = totalAmount + amount;\n    setTotalAmount(optimisticTotal);\n    setDonationAmount(''); // Clear the donation input field\n    setIsSubmitting(true);\n    try {\n      const response = await axios.post('http://localhost:8081/api/posts/donate', {\n        email,\n        postId,\n        donateAmount: amount\n      });\n      console.log('Donation successful', response.data);\n      // Ensure the total amount is updated correctly from the backend response\n      if (response.data.totalAmount !== undefined) {\n        setTotalAmount(response.data.totalAmount);\n      }\n    } catch (error) {\n      console.error('Error making donation:', error);\n      // Revert to previous total amount if the request fails\n      setTotalAmount(prevTotal => prevTotal - amount);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"acildurum-button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: donationAmount,\n      onChange: handleDonationChange,\n      placeholder: \"Ba\\u011F\\u0131\\u015F Miktar\\u0131 (TL)\",\n      style: {\n        marginRight: \"10px\",\n        padding: \"10px\",\n        borderRadius: \"5px\",\n        border: \"1px solid gray\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"buttonDonation\",\n      onClick: handleDonationClick,\n      disabled: isSubmitting,\n      style: {\n        backgroundColor: \"green\",\n        color: \"white\",\n        padding: \"10px\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: \"pointer\"\n      },\n      children: \"Ba\\u011F\\u0131\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Amount: \", totalAmount, \" TL\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(BagisButton, \"BHIvNiMtUKDNseDS/nQ4KAf3jQg=\");\n_c = BagisButton;\nexport default BagisButton;\nvar _c;\n$RefreshReg$(_c, \"BagisButton\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BagisButton","post","_s","donationAmount","setDonationAmount","totalAmount","setTotalAmount","isSubmitting","setIsSubmitting","console","log","handleDonationChange","e","target","value","handleDonationClick","email","sessionStorage","getItem","postId","id","amount","parseFloat","isNaN","error","optimisticTotal","response","donateAmount","data","undefined","prevTotal","className","children","type","onChange","placeholder","style","marginRight","padding","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["/Users/leyla/Desktop/imdat-frontend/src/Components/BagisButton.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const BagisButton = ({ post }) => {\n//   const [donationAmount, setDonationAmount] = useState(\"\");\n//   const [totalAmount, setTotalAmount] = useState(post.totalAmount || 0);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n\n//   useEffect(() => {\n//     console.log(\"BagisButton post:\", post); // Log the post to ensure it is received correctly\n//     setTotalAmount(post.totalAmount || 0); // Initialize total amount from post prop\n//   }, [post]);\n\n//   const handleDonationChange = (e) => {\n//     setDonationAmount(e.target.value);\n//   };\n\n//   const handleDonationClick = async () => {\n//     const email = sessionStorage.getItem(\"userEmail\");\n//     const postId = post.id;\n//     const amount = parseFloat(donationAmount);\n\n//     if (isNaN(amount) || amount <= 0) {\n//       console.error(\"Invalid donation amount\");\n//       return;\n//     }\n\n//     // Optimistically update the total amount\n//     const optimisticTotal = totalAmount + amount;\n//     setTotalAmount(optimisticTotal);\n//     setDonationAmount(\"\"); // Clear the donation input field\n//     setIsSubmitting(true);\n\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:8081/api/posts/donate\",\n//         {\n//           email,\n//           postId,\n//           donateAmount: amount,\n//         }\n//       );\n//       console.log(\"Donation successful\", response.data);\n//       // Ensure the total amount is updated correctly from the backend response\n//       if (response.data.totalAmount !== undefined) {\n//         setTotalAmount(response.data.totalAmount);\n//       }\n//     } catch (error) {\n//       console.error(\"Error making donation:\", error);\n//       // Revert to previous total amount if the request fails\n//       setTotalAmount((prevTotal) => prevTotal - amount);\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"acildurum-button-container\">\n//       <input\n//         type=\"text\"\n//         value={donationAmount}\n//         onChange={handleDonationChange}\n//         placeholder=\"Bağış Miktarı (TL)\"\n//         style={{\n//           marginRight: \"10px\",\n//           padding: \"10px\",\n//           borderRadius: \"5px\",\n//           border: \"1px solid gray\",\n//         }}\n//       />\n//       <button\n//         onClick={handleDonationClick}\n//         disabled={isSubmitting}\n//         style={{\n//           backgroundColor: \"green\",\n//           color: \"white\",\n//           padding: \"10px\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//           cursor: \"pointer\",\n//         }}\n//       >\n//         Bağış Yap\n//       </button>\n//       <div>\n//         <p>Total Amount: {totalAmount} TL</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BagisButton;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst BagisButton = ({ post }) => {\n    const [donationAmount, setDonationAmount] = useState('');\n    const [totalAmount, setTotalAmount] = useState(post.totalAmount || 0);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        console.log('BagisButton post:', post); // Log the post to ensure it is received correctly\n        setTotalAmount(post.totalAmount || 0); // Initialize total amount from post prop\n    }, [post]);\n\n    const handleDonationChange = (e) => {\n        setDonationAmount(e.target.value);\n    };\n\n    const handleDonationClick = async () => {\n        const email = sessionStorage.getItem('userEmail');\n        const postId = post.id;\n        const amount = parseFloat(donationAmount);\n\n        if (isNaN(amount) || amount <= 0) {\n            console.error('Invalid donation amount');\n            return;\n        }\n\n        // Optimistically update the total amount\n        const optimisticTotal = totalAmount + amount;\n        setTotalAmount(optimisticTotal);\n        setDonationAmount(''); // Clear the donation input field\n        setIsSubmitting(true);\n\n        try {\n            const response = await axios.post('http://localhost:8081/api/posts/donate', {\n                email,\n                postId,\n                donateAmount: amount\n            });\n            console.log('Donation successful', response.data);\n            // Ensure the total amount is updated correctly from the backend response\n            if (response.data.totalAmount !== undefined) {\n                setTotalAmount(response.data.totalAmount);\n            }\n        } catch (error) {\n            console.error('Error making donation:', error);\n            // Revert to previous total amount if the request fails\n            setTotalAmount(prevTotal => prevTotal - amount);\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <div className=\"acildurum-button-container\">\n          <input\n            type=\"text\"\n            value={donationAmount}\n            onChange={handleDonationChange}\n            placeholder=\"Bağış Miktarı (TL)\"\n            style={{\n              marginRight: \"10px\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              border: \"1px solid gray\",\n            }}\n          />\n          <button\n          id=\"buttonDonation\"\n            onClick={handleDonationClick}\n            disabled={isSubmitting}\n            style={{\n              backgroundColor: \"green\",\n              color: \"white\",\n              padding: \"10px\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Bağış Yap\n          </button>\n          <div>\n            <p>Total Amount: {totalAmount} TL</p>\n          </div>\n        </div>\n      );\n    };\n    \n    export default BagisButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}