{"ast":null,"code":"var _jsxFileName = \"/Users/leyla/Desktop/imdat-frontend/src/Components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport axios from \"axios\";\nimport MenuAppBar from \"./MenuAppBar\";\nimport \"../styles/Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"90vh\"\n  };\n  const [posts, setPosts] = useState([]);\n  const createPost = (status, address, image) => {\n    const createdPost = [...posts, {\n      id: Math.round(Math.random() * 9999999),\n      status,\n      address,\n      image\n    }];\n    setPosts(createdPost);\n  };\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const sessionLat = parseFloat(sessionStorage.getItem(\"userLatitude\"));\n    const sessionLng = parseFloat(sessionStorage.getItem(\"userLongitude\"));\n    console.log(sessionLat, sessionLng);\n    if (!isNaN(sessionLat) && !isNaN(sessionLng)) {\n      setCurrentPosition({\n        lat: sessionLat,\n        lng: sessionLng\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (location.state && location.state.locations) {\n      console.log(location.state.locations);\n      setLocations(location.state.locations);\n    }\n  }, [location]);\n  const handleMarkerClick = location => {\n    setSelectedMarker(location);\n  };\n  const handlePostClick = post => {\n    console.log(\"**** - handle post click\" + post.id);\n    const endpoint = `http://localhost:8081/api/posts/getPostById/${post.id}`;\n    axios.get(endpoint).then(response => {\n      const postData = response.data;\n      console.log(response);\n      navigate(`/post/${post.id}`, {\n        state: {\n          post: postData\n        }\n      });\n    }).catch(error => {\n      console.error(\"Error fetching post:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapPageDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MenuAppBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        center: currentPosition || (locations.length > 0 ? locations[0] : {\n          lat: 0,\n          lng: 0\n        }),\n        zoom: 10,\n        children: [currentPosition && /*#__PURE__*/_jsxDEV(Marker, {\n          position: currentPosition,\n          icon: {\n            url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n          },\n          onClick: () => handleMarkerClick(currentPosition)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), locations === null || locations === void 0 ? void 0 : locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: location.latitude,\n            lng: location.longitude\n          },\n          icon: {\n            url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n          },\n          onClick: () => handleMarkerClick(location)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: selectedMarker.latitude,\n            lng: selectedMarker.longitude\n          },\n          onCloseClick: () => setSelectedMarker(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Location Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedMarker.imageUrl // Assuming your location data includes an imageUrl field\n              ,\n              alt: \"location\",\n              style: {\n                width: \"100px\",\n                height: \"100px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: selectedMarker.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePostClick(selectedMarker),\n              children: \"View Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"ji2v3sKI+ubZoYMH4uRIG0YBQn8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","GoogleMap","LoadScript","Marker","InfoWindow","axios","MenuAppBar","jsxDEV","_jsxDEV","Map","_s","mapContainerStyle","width","height","posts","setPosts","createPost","status","address","image","createdPost","id","Math","round","random","currentPosition","setCurrentPosition","locations","setLocations","selectedMarker","setSelectedMarker","location","navigate","sessionLat","parseFloat","sessionStorage","getItem","sessionLng","console","log","isNaN","lat","lng","state","handleMarkerClick","handlePostClick","post","endpoint","get","then","response","postData","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","center","length","zoom","position","icon","url","onClick","map","index","latitude","longitude","onCloseClick","src","imageUrl","alt","style","description","_c","$RefreshReg$"],"sources":["/Users/leyla/Desktop/imdat-frontend/src/Components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport axios from \"axios\";\nimport MenuAppBar from \"./MenuAppBar\";\nimport \"../styles/Map.css\";\n\nfunction Map() {\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"90vh\",\n  };\n  const [posts, setPosts] = useState([]);\n  const createPost = (status, address, image) => {\n    const createdPost = [\n      ...posts,\n      {\n        id: Math.round(Math.random() * 9999999),\n        status,\n        address,\n        image,\n      },\n    ];\n    setPosts(createdPost);\n  };\n\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const sessionLat = parseFloat(sessionStorage.getItem(\"userLatitude\"));\n    const sessionLng = parseFloat(sessionStorage.getItem(\"userLongitude\"));\n    console.log(sessionLat, sessionLng);\n    if (!isNaN(sessionLat) && !isNaN(sessionLng)) {\n      setCurrentPosition({ lat: sessionLat, lng: sessionLng });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (location.state && location.state.locations) {\n      console.log(location.state.locations);\n      setLocations(location.state.locations);\n    }\n  }, [location]);\n\n  const handleMarkerClick = (location) => {\n    setSelectedMarker(location);\n  };\n\n  const handlePostClick = (post) => {\n    console.log(\"**** - handle post click\" + post.id);\n    const endpoint = `http://localhost:8081/api/posts/getPostById/${post.id}`;\n\n    axios\n      .get(endpoint)\n      .then((response) => {\n        const postData = response.data;\n        console.log(response);\n        navigate(`/post/${post.id}`, { state: { post: postData } });\n      })\n      .catch((error) => {\n        console.error(\"Error fetching post:\", error);\n      });\n  };\n\n  return (\n    <div className=\"mapPageDiv\">\n      <div>\n        <MenuAppBar />\n      </div>\n      <LoadScript googleMapsApiKey=\"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\">\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          center={\n            currentPosition ||\n            (locations.length > 0 ? locations[0] : { lat: 0, lng: 0 })\n          }\n          zoom={10}\n        >\n          {/* Render markers */}\n          {currentPosition && (\n            <Marker\n              position={currentPosition}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n              }}\n              onClick={() => handleMarkerClick(currentPosition)}\n            />\n          )}\n\n          {locations?.map((location, index) => (\n            <Marker\n              key={index}\n              position={{ lat: location.latitude, lng: location.longitude }}\n              icon={{\n                url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n              }}\n              onClick={() => handleMarkerClick(location)}\n            />\n          ))}\n\n          {selectedMarker && (\n            <InfoWindow\n              position={{\n                lat: selectedMarker.latitude,\n                lng: selectedMarker.longitude,\n              }}\n              onCloseClick={() => setSelectedMarker(null)}\n            >\n              <div>\n                <h4>Location Info</h4>\n                <img\n                  src={selectedMarker.imageUrl} // Assuming your location data includes an imageUrl field\n                  alt=\"location\"\n                  style={{ width: \"100px\", height: \"100px\" }}\n                />\n                <p>{selectedMarker.description}</p>{\" \"}\n                {/* Assuming your location data includes a description field */}\n                <button onClick={() => handlePostClick(selectedMarker)}>\n                  View Post\n                </button>\n              </div>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}