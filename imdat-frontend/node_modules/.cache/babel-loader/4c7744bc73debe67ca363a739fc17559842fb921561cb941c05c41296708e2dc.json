{"ast":null,"code":"var _jsxFileName = \"/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Main.css';\nimport PostList from './PostList';\nimport MenuAppBar from './MenuAppBar';\nimport MainCard from './MainCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const email = sessionStorage.getItem(\"userEmail\");\n    // HTTP isteği yapılacak endpoint\n    const endpoint = `http://localhost:4444/api/posts/getAllPosts/${email}`;\n\n    // Veriyi çekmek için fonksiyon (Ajax kullanarak)\n    const fetchData = () => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', endpoint, true);\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          const data = JSON.parse(xhr.responseText);\n          setPosts(data); // Gelen verileri state'e set et\n        } else if (xhr.readyState === 4) {\n          console.error('Error fetching posts:', xhr.statusText);\n        }\n      };\n      xhr.send();\n    };\n\n    // Sayfa yüklendiğinde veriyi çek\n    fetchData();\n\n    // Her 5 saniyede bir veriyi çek\n    const intervalId = setInterval(fetchData, 5000);\n\n    // Cleanup function: bileşen unmount edildiğinde interval'i temizle\n    return () => clearInterval(intervalId);\n  }, []); // Boş dependency array ile sadece bir kez çalışmasını sağlarız\n\n  const createPost = (status, address, image) => {\n    const createdPost = [...posts, {\n      id: Math.round(Math.random() * 9999999),\n      status,\n      address,\n      image\n    }];\n    setPosts(createdPost);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(MenuAppBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: /*#__PURE__*/_jsxDEV(MainCard, {\n          onCreate: createPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postContainer\",\n        children: /*#__PURE__*/_jsxDEV(PostList, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","PostList","MenuAppBar","MainCard","jsxDEV","_jsxDEV","Main","_s","posts","setPosts","email","sessionStorage","getItem","endpoint","fetchData","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","data","JSON","parse","responseText","console","error","statusText","send","intervalId","setInterval","clearInterval","createPost","address","image","createdPost","id","Math","round","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","_c","$RefreshReg$"],"sources":["/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/Main.css';\nimport PostList from './PostList';\nimport MenuAppBar from './MenuAppBar';\nimport MainCard from './MainCard';\n\nfunction Main() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const email = sessionStorage.getItem(\"userEmail\");\n    // HTTP isteği yapılacak endpoint\n    const endpoint = `http://localhost:4444/api/posts/getAllPosts/${email}`;\n\n    // Veriyi çekmek için fonksiyon (Ajax kullanarak)\n    const fetchData = () => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', endpoint, true);\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          const data = JSON.parse(xhr.responseText);\n          setPosts(data); // Gelen verileri state'e set et\n        } else if (xhr.readyState === 4) {\n          console.error('Error fetching posts:', xhr.statusText);\n        }\n      };\n      xhr.send();\n    };\n\n    // Sayfa yüklendiğinde veriyi çek\n    fetchData();\n\n    // Her 5 saniyede bir veriyi çek\n    const intervalId = setInterval(fetchData, 5000);\n\n    // Cleanup function: bileşen unmount edildiğinde interval'i temizle\n    return () => clearInterval(intervalId);\n  }, []); // Boş dependency array ile sadece bir kez çalışmasını sağlarız\n\n  const createPost = (status, address, image) => {\n    const createdPost = [\n      ...posts,\n      {\n        id: Math.round(Math.random() * 9999999),\n        status,\n        address,\n        image\n      }\n    ];\n    setPosts(createdPost);\n  };\n\n  return (\n    <div className='mainPage'>\n      <div className='header'>\n        <MenuAppBar />\n      </div>\n      <div className='mainContent'>\n        <div className='sidebar'>\n          <MainCard onCreate={createPost} />\n        </div>\n        <div className='postContainer'>\n          <PostList posts={posts} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}