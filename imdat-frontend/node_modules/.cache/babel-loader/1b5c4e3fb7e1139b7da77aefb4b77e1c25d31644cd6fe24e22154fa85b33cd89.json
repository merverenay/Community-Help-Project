{"ast":null,"code":"var _jsxFileName = \"/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"90vh\"\n  };\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    const sessionLat = parseFloat(sessionStorage.getItem(\"userLatitude\"));\n    const sessionLng = parseFloat(sessionStorage.getItem(\"userLongitude\"));\n    console.log(sessionLat, sessionLng);\n    if (!isNaN(sessionLat) && !isNaN(sessionLng)) {\n      setCurrentPosition({\n        lat: sessionLat,\n        lng: sessionLng\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (location.state && location.state.locations) {\n      setLocations(location.state.locations);\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: currentPosition || (locations.length > 0 ? locations[0] : {\n        lat: 0,\n        lng: 0\n      }),\n      zoom: 10,\n      children: [currentPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentPosition,\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: location.latitude,\n          lng: location.longitude\n        },\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"mYFPxV6jdKMUfJaRWaohXXf16No=\", false, function () {\n  return [useLocation];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Map","_s","mapContainerStyle","width","height","currentPosition","setCurrentPosition","locations","setLocations","location","sessionLat","parseFloat","sessionStorage","getItem","sessionLng","console","log","isNaN","lat","lng","state","googleMapsApiKey","children","center","length","zoom","position","icon","url","fileName","_jsxFileName","lineNumber","columnNumber","map","index","latitude","longitude","_c","$RefreshReg$"],"sources":["/Users/busraece/Documents/carePiaFront/imdat-Front/imdat-frontend/src/Components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nfunction Map() {\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"90vh\",\n  };\n\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const sessionLat = parseFloat(sessionStorage.getItem(\"userLatitude\"));\n    const sessionLng = parseFloat(sessionStorage.getItem(\"userLongitude\"));  \n    console.log(sessionLat, sessionLng);  \n    if (!isNaN(sessionLat) && !isNaN(sessionLng)) {\n      setCurrentPosition({ lat: sessionLat, lng: sessionLng });\n    }\n  }, []);\n  \n  useEffect(() => {\n    if (location.state && location.state.locations) {\n      setLocations(location.state.locations);\n    }\n  }, [location]);\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyD-sV2HwR7QS2Oni6Jz9IuyPMD448s5TFY\">\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        center={currentPosition || (locations.length > 0 ? locations[0] : { lat: 0, lng: 0 })}\n        zoom={10}\n      >\n        {/* Render markers */}\n        {currentPosition && (\n          <Marker\n            position={currentPosition}\n            icon={{\n              url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n            }}\n          />\n        )}\n\n        {locations.map((location, index) => (\n          <Marker\n            key={index}\n            position={{ lat: location.latitude, lng: location.longitude }}\n            icon={{\n              url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n            }}\n          />\n        ))}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,iBAAiB,GAAG;IACxBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EAED,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAGC,UAAU,CAACC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IACrE,MAAMC,UAAU,GAAGH,UAAU,CAACC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;IACtEE,OAAO,CAACC,GAAG,CAACN,UAAU,EAAEI,UAAU,CAAC;IACnC,IAAI,CAACG,KAAK,CAACP,UAAU,CAAC,IAAI,CAACO,KAAK,CAACH,UAAU,CAAC,EAAE;MAC5CR,kBAAkB,CAAC;QAAEY,GAAG,EAAER,UAAU;QAAES,GAAG,EAAEL;MAAW,CAAC,CAAC;IAC1D;EACF,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACd,IAAIiB,QAAQ,CAACW,KAAK,IAAIX,QAAQ,CAACW,KAAK,CAACb,SAAS,EAAE;MAC9CC,YAAY,CAACC,QAAQ,CAACW,KAAK,CAACb,SAAS,CAAC;IACxC;EACF,CAAC,EAAE,CAACE,QAAQ,CAAC,CAAC;EAEd,oBACEV,OAAA,CAACH,UAAU;IAACyB,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eACpEvB,OAAA,CAACJ,SAAS;MACRO,iBAAiB,EAAEA,iBAAkB;MACrCqB,MAAM,EAAElB,eAAe,KAAKE,SAAS,CAACiB,MAAM,GAAG,CAAC,GAAGjB,SAAS,CAAC,CAAC,CAAC,GAAG;QAAEW,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAE,CAAC,CAAE;MACtFM,IAAI,EAAE,EAAG;MAAAH,QAAA,GAGRjB,eAAe,iBACdN,OAAA,CAACF,MAAM;QACL6B,QAAQ,EAAErB,eAAgB;QAC1BsB,IAAI,EAAE;UACJC,GAAG,EAAE;QACP;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACF,EAEAzB,SAAS,CAAC0B,GAAG,CAAC,CAACxB,QAAQ,EAAEyB,KAAK,kBAC7BnC,OAAA,CAACF,MAAM;QAEL6B,QAAQ,EAAE;UAAER,GAAG,EAAET,QAAQ,CAAC0B,QAAQ;UAAEhB,GAAG,EAAEV,QAAQ,CAAC2B;QAAU,CAAE;QAC9DT,IAAI,EAAE;UACJC,GAAG,EAAE;QACP;MAAE,GAJGM,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB;AAAC/B,EAAA,CAvDQD,GAAG;EAAA,QASON,WAAW;AAAA;AAAA2C,EAAA,GATrBrC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}